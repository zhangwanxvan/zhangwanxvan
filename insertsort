//插入排序insertsort 
#include <iostream>
#include <math.h>

using namespace std;

bool insertSort(int array[], size_t arrLen) {  //引入说明数组及数组大小
    if (arrLen < 0) {
        cout << "Please check your input." << endl;  //如果输入的数组大小不符，就进行警告
        return false;
    }

    for (int orderedNum = 1; orderedNum < arrLen; ++orderedNum) {  //运用循环划分数据规模
        int insertValue = array[orderedNum];
        int orderedIndex = orderedNum - 1;
        for (; orderedIndex >= 0; --orderedIndex) {
            if (insertValue < array[orderedIndex]) {  //对数据进行插入
                array[orderedIndex + 1] = array[orderedIndex];
            }
            else {
                break;
            }
        }
        array[orderedIndex+1] = insertValue;
    }

    return true;
}

bool insertSort_Sen(int array[], size_t arrLen) {  //引入说明数组及数组大小
     if (arrLen < 0) {
        cout << "Please check your input." << endl;  //如果输入的数组大小不符，就进行警告
        return false;
    }

    for (int orderedNum = 1; orderedNum < arrLen; ++orderedNum) {  //运用循环划分数据规模 
        int insertValue = array[orderedNum];
        int orderedIndex = orderedNum - 1;
        while(orderedIndex >=0 && array[orderedIndex] > insertValue) {  //对数据进行插入 
           array[orderedIndex + 1] = array[orderedIndex];  
           --orderedIndex;
        }
        array[orderedIndex+1] = insertValue;
    }

    return true;
}

void printArray(int array[], int arrLen) {
    for (int i = 0; i < arrLen; ++i) {
        cout << array[i] << " ";
    }
    cout << endl;
}

int main(){
    int array0[] = {};
    int arrayLen = sizeof(array0)/sizeof(int);

    printArray(array0, arrayLen);  //对数据排序，输出
    insertSort(array0, arrayLen);
    printArray(array0, arrayLen);

    cout << "=========================================" << endl;

    int array1[] = {1};
    arrayLen = sizeof(array1)/sizeof(int);

    printArray(array1, arrayLen);  //对数据排序，输出
    insertSort_Sen(array1, arrayLen);
    printArray(array1, arrayLen);

    cout << "=========================================" << endl;

    int array2[] = {2, 1};
    arrayLen = sizeof(array2)/sizeof(int);

    printArray(array2, arrayLen);  //对数据排序，输出
    insertSort(array2, arrayLen);
    printArray(array2, arrayLen);

    cout << "=========================================" << endl;

    int array3[] = {1, 5, 3};
    arrayLen = sizeof(array3)/sizeof(int);

    printArray(array3, arrayLen);  //对数据排序，输出
    insertSort_Sen(array3, arrayLen);
    printArray(array3, arrayLen);


    cout << "=========================================" << endl;

    int array4[] = {9, 12, 8, 7};
    arrayLen = sizeof(array4)/sizeof(int);

    printArray(array4, arrayLen);  //对数据排序，输出
    insertSort(array4, arrayLen);
    printArray(array4, arrayLen);

    cout << "=========================================" << endl;

    int array5[] = {9, 12, 8, 7, 3};
    arrayLen = sizeof(array5)/sizeof(int);

    printArray(array5, arrayLen);  //对数据排序，输出
    insertSort_Sen(array5, arrayLen);
    printArray(array5, arrayLen);


}
