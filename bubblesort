//冒泡排序bubblesort
#include <iostream>
#include <math.h>

using namespace std;

bool bubbleSort(int array[], size_t arrLen) {  //引入说明数组及数组大小 
    if (arrLen < 0) {
        cout << "Please check your input." << endl;  //如果输入的数组大小不符，就进行警告 
        return false;
    }


    for (int orderedNum = 0; orderedNum < arrLen; ++orderedNum) {  //提前提出冒泡循环的标志位 
        bool isExchanged = false;
        for (int i = 0; i < arrLen - orderedNum -1; ++i) {
            if (array[i] > array[i+1]) {  //交换 
                int temp = array[i];
                array[i] = array[i+1];
                array[i+1] = temp;
                isExchanged = true;  //表示有数据交换 
            }
        }
        if (!isExchanged) {  //没有数据交换，提前退出 
            break;
        }
    }
    return true;
}

bool bubbleSort_Sheng(int array[], size_t arrLen) {  //引入说明数组及数组大小
    if (arrLen < 0) {
        cout << "Please check your input." << endl;  //如果输入的数组大小不符，就进行警告 
        return false;
    }
    int orderedNum = 0;
    while (true) {
        bool isExchanged = false;
        for (int i = 0; i < arrLen - orderedNum -1; ++i) {  //提出冒泡循环的标志位 
            if (array[i] > array[i+1]) {  //交换 
                int temp = array[i];
                array[i] = array[i+1];
                array[i+1] = temp;
                isExchanged = true;
            }
        }

        if (!isExchanged) {  //没有数据交换，退出 
            break;
        }

        ++orderedNum;
    }
    return true;
}

void printArray(int array[], int arrLen) {
    for (int i = 0; i < arrLen; ++i) {
        cout << array[i] << " ";
    }
    cout << endl;
}

int main(){
    int array0[] = {};
    int arrayLen = sizeof(array0)/sizeof(int);

    printArray(array0, arrayLen);  //数组中相邻元素进行对比 
    bubbleSort(array0, arrayLen); 
    printArray(array0, arrayLen);

    cout << "=========================================" << endl;  //当数组中没有元素时仅输出符号 

    int array1[] = {1};
    arrayLen = sizeof(array1)/sizeof(int);

    printArray(array1, arrayLen);  //数组中相邻元素进行对比
    bubbleSort_Sheng(array1, arrayLen);
    printArray(array1, arrayLen);

    cout << "=========================================" << endl;   

    int array2[] = {2, 1};
    arrayLen = sizeof(array2)/sizeof(int);

    printArray(array2, arrayLen);  //数组中相邻元素进行对比
    bubbleSort(array2, arrayLen);
    printArray(array2, arrayLen);

    cout << "=========================================" << endl;

    int array3[] = {1, 5, 3};
    arrayLen = sizeof(array3)/sizeof(int);

    printArray(array3, arrayLen);  //数组中相邻元素进行对比
    bubbleSort_Sheng(array3, arrayLen);
    printArray(array3, arrayLen);


    cout << "=========================================" << endl;

    int array4[] = {9, 12, 8, 7};
    arrayLen = sizeof(array4)/sizeof(int);

    printArray(array4, arrayLen);  //数组中相邻元素进行对比
    bubbleSort(array4, arrayLen);
    printArray(array4, arrayLen);

    cout << "=========================================" << endl;

    int array5[] = {9, 12, 8, 7, 3};
    arrayLen = sizeof(array5)/sizeof(int);

    printArray(array5, arrayLen);  //数组中相邻元素进行对比
    bubbleSort_Sheng(array5, arrayLen);
    printArray(array5, arrayLen);


} 
